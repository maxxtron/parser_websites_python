from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time
import openpyxl

BASE_URL = "https://karatltd.com.ua/"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Selenium
chrome_options = Options()
chrome_options.add_argument("--headless")  # –ë–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
chrome_options.add_argument("--disable-gpu")
chrome_options.add_argument("--no-sandbox")

# –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
def parse_products(driver, url):
    driver.get(url)
    time.sleep(3)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    products = []

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    product_cards = driver.find_elements(By.CLASS_NAME, "product-layout")

    if not product_cards:
        print("‚ùóÔ∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")

    for card in product_cards:
        id = card.find_element(By.CLASS_NAME, "sc-module-model").text.strip() if card.find_element(By.CLASS_NAME, "sc-module-model") else "No Id"
        title = card.find_element(By.CLASS_NAME, "sc-module-title").text.strip() if card.find_element(By.CLASS_NAME, "sc-module-title") else "No title"
        price = card.find_element(By.CLASS_NAME, "sc-module-price").text.strip() if card.find_element(By.CLASS_NAME, "sc-module-price") else "No price"
        link = card.find_element(By.CLASS_NAME, "sc-module-title").get_attribute("href") if card.find_element(By.CLASS_NAME, "sc-module-title") else "#"

        products.append({
            "id": id,
            "title": title,
            "price": price,
            "link": link
        })

    return products

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
def parse_all_products_with_pagination(driver, category_url, max_pages=97):
    all_products = []
    
    for page_num in range(1, max_pages + 1):
        url = f"{category_url}?page={page_num}"
        print(f"üìÑ –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page_num}...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        products = parse_products(driver, url)
        
        if not products:
            print("‚ùóÔ∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
            continue
        
        all_products.extend(products)
    
    return all_products

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Excel
def save_to_excel(products, filename="products.xlsx"):
    workbook = openpyxl.Workbook()
    sheet = workbook.active
    sheet.title = "Products"

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    sheet.append(["Id", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–¶–µ–Ω–∞", "–°—Å—ã–ª–∫–∞"])

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
    for product in products:
        sheet.append([
            product["id"],
            product["title"],
            product["price"],
            product["link"]
        ])

    workbook.save(filename)
    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {filename}")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    category_url = BASE_URL + "kabelno-providnykova-produktsiia"  # –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    all_products = parse_all_products_with_pagination(driver, category_url)

    if all_products:
        save_to_excel(all_products)
    else:
        print("‚ùóÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")

    driver.quit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã
